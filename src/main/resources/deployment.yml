apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: ${project.artifactId}
  name: ${project.artifactId}
  namespace: ns-sstj
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: ${project.artifactId}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: ${project.artifactId}
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      nodeName: node2
      containers:
        - env:
            - name: TZ
              value: Asia/Shanghai
          image:  '${docker.image.prefix}/${project.artifactId}:${project.version}'
          imagePullPolicy: IfNotPresent
          name: ns-sstj
          ports:
            - containerPort: 8761
          livenessProbe:
            tcpSocket:
              port: 8761
            timeoutSeconds: 30
          volumeMounts:
            - mountPath: /logs #日志路径，需要根据实际的路径指定
              name: logs
      volumes:
        - name: logs
          hostPath:
            path: /opt/backend_sstj/log/ #日志路径，需要根据实际的路径指定
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: ${project.artifactId}
  namespace: ns-sstj
spec:
  ports:
    - name: ${project.artifactId}
      port: 8761
      targetPort: 8761
      protocol: TCP
  selector:
    name: ${project.artifactId}

